pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: PublishArtifact
    displayName: "Publish Pipeline Artifact"
    jobs:
      - task: PublishPipelineArtifact@1
        inputs:
          artifactName: 'manifests'
          path: 'manifests'

  # - stage: Deploy
  #   displayName: Deploy stage
  #   dependsOn: Build
  #   jobs:
  #   - deployment: Deploy
  #     displayName: Deploy job
  #     pool:
  #       vmImage: 'ubuntu-latest'
  #     environment: 'myenv.aksnamespace' #customize with your environment
  #     strategy:
  #       runOnce:
  #         deploy:
  #           steps:
  #           - task: DownloadPipelineArtifact@2
  #             inputs:
  #               artifactName: 'manifests'
  #               downloadPath: '$(System.ArtifactsDirectory)/manifests'
            
            

  #           # - task: KubernetesManifest@1
  #           #   displayName: Create imagePullSecret
  #           #   inputs:
  #           #     action: 'createSecret'
  #           #     connectionType: 'kubernetesServiceConnection'
  #           #     kubernetesServiceConnection: 'myapp-default' #customize for your Kubernetes service connection
  #           #     secretType: 'dockerRegistry'
  #           #     secretName: '$(imagePullSecret)'
  #           #     dockerRegistryEndpoint: '$(dockerRegistryServiceConnection)'

  #           - task: KubernetesManifest@1
  #             displayName: Deploy to Kubernetes cluster
  #             inputs:
  #               action: 'deploy'
  #               connectionType: 'kubernetesServiceConnection'
  #               kubernetesServiceConnection: 'myapp-default' #customize for your Kubernetes service connection
  #               manifests: |
  #                 $(Pipeline.Workspace)/manifests/deployment.yml
  #                 $(Pipeline.Workspace)/manifests/service.yml
  #               containers: '$(containerRegistry)/$(imageRepository):$(tag)'
  #               imagePullSecrets: '$(imagePullSecret)'