trigger: none

variables:
  serviceConnection: 'arm-svc-con'
  aksCluster: 'aks-onlinestore-dev-uksouth-001'
  aksResourceGroup: 'rg-onlinestore-dev-uksouth-001'
  namespace: 'default'
  imageName: 'store-front'
  tag: latest

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: Build and publish stage
    jobs:
      - job: BuildPublishDockerImages
        displayName: Build Publish Docker Images
        steps:
          - task: DockerInstaller@0
            displayName: Install Docker
            inputs:
              dockerVersion: '17.09.0-ce'

          - template: appTemplates/build.yml
            parameters:
              acrServiceConnection: 'acr-svc-connection'
              imageName: $(imageName)
              dockerFilePath: '$(Build.sourcesdirectory)/app/store-front/Dockerfile'
              tag: $(tag)

          # Task 2 publish build artifacts
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/manifests/store-front'
              ArtifactName: 'store-front-manifests'
              publishLocation: 'Container'
  
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build

    jobs:
    - deployment: Deploy
      displayName: Deploy
      pool:
        vmImage: ubuntu-latest
      environment: 'Dev'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'                
                artifactName: 'store-front-manifests' 
                targetPath: '$(System.ArtifactsDirectory)/manifests/store-front'
            
            - template: appTemplates/deploy.yml
              parameters:
                serviceConnection: $(serviceConnection)
                aksObject: 'store-front'
                manifestPath: $(System.ArtifactsDirectory)/manifests/store-front
                aksResourceGroup: $(aksResourceGroup)                
                aksCluster: $(aksCluster)
                namespace: $(namespace)
